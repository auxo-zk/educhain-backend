/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RevenuePoolFactory,
  RevenuePoolFactoryInterface,
} from "../../contracts/RevenuePoolFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "governor_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "createPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolIndex",
        type: "uint256",
      },
    ],
    name: "pool",
    outputs: [
      {
        internalType: "contract IRevenuePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516108cf3803806108cf83398101604081905261002f91610070565b600080546001600160a01b0319166001600160a01b03938416179055166080526100a3565b80516001600160a01b038116811461006b57600080fd5b919050565b6000806040838503121561008357600080fd5b61008c83610054565b915061009a60208401610054565b90509250929050565b6080516108056100ca6000396000818160d00152818160f1015261017301526108056000f3fe6080604052600436106100345760003560e01c80639a06b113146100395780639e3079cb14610043578063fe31311214610066575b600080fd5b61004161009e565b005b34801561004f57600080fd5b506001546040519081526020015b60405180910390f35b34801561007257600080fd5b506100866100813660046102fd565b6102c0565b6040516001600160a01b03909116815260200161005d565b6000546001600160a01b0316336001600160a01b0316146100be57600080fd5b600034116100cb57600080fd5b6000347f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad044f496040518163ffffffff1660e01b8152600401602060405180830381865afa15801561014d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101719190610316565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166375794a3c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f39190610316565b6040516101ff906102f0565b6001600160a01b039093168352602083019190915260408201526060016040518091039082f0905080158015610239573d6000803e3d6000fd5b506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0383169081179091556040519081529091507f83a48fbcfc991335314e74d0496aab6a1987e992ddc85dddbcc4d6dd6ef2e9fc9060200160405180910390a150565b6000600182815481106102d5576102d561032f565b6000918252602090912001546001600160a01b031692915050565b61048a8061034683390190565b60006020828403121561030f57600080fd5b5035919050565b60006020828403121561032857600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fdfe60a060405260405161048a38038061048a8339810160408190526100229161004c565b6000341161002f57600080fd5b6001600160a01b039092166080523460005560015560025561008f565b60008060006060848603121561006157600080fd5b83516001600160a01b038116811461007857600080fd5b602085015160409095015190969495509392505050565b6080516103da6100b0600039600081816074015261013b01526103da6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630c340a2414610067578063379607f5146100a35780633e9491a2146100b857806375794a3c146100ca578063ad044f49146100d2578063dbe7e3bd146100da575b600080fd5b6040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526020015b60405180910390f35b6100b66100b13660046102f5565b61010d565b005b6000545b60405190815260200161009a565b6002546100bc565b6001546100bc565b6100fd6100e83660046102f5565b60009081526003602052604090205460ff1690565b604051901515815260200161009a565b60008181526003602052604090205460ff161561012957600080fd5b600254811061013757600080fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bb919061030e565b6001600160a01b0316636819736083336040516001600160e01b031960e085901b16815260048101929092526001600160a01b03166024820152604401602060405180830381865afa158015610215573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610239919061033e565b6000838152600360205260408120805460ff1916600117905590915061025e60015490565b8261026860005490565b6102729190610357565b61027c9190610382565b604051909150339082156108fc029083906000818181858888f193505050501580156102ac573d6000803e3d6000fd5b507fc15f451120b13b6b40c6ad6203614ab3088308bef9150c0d6f46ea79bf46422433604080516001600160a01b039092168252602082018690520160405180910390a1505050565b60006020828403121561030757600080fd5b5035919050565b60006020828403121561032057600080fd5b81516001600160a01b038116811461033757600080fd5b9392505050565b60006020828403121561035057600080fd5b5051919050565b808202811582820484141761037c57634e487b7160e01b600052601160045260246000fd5b92915050565b60008261039f57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220050dd81cc5f4378b26e37f83113faa9f8ad508054dd393ff0ce3a02664f449a164736f6c63430008140033a2646970667358221220313c2d531f2b60df1c22c2de989dd68c3c36b3f066e06b42051e03da5881d63364736f6c63430008140033";

type RevenuePoolFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevenuePoolFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevenuePoolFactory__factory extends ContractFactory {
  constructor(...args: RevenuePoolFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner_: AddressLike,
    governor_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner_, governor_, overrides || {});
  }
  override deploy(
    owner_: AddressLike,
    governor_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner_, governor_, overrides || {}) as Promise<
      RevenuePoolFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RevenuePoolFactory__factory {
    return super.connect(runner) as RevenuePoolFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevenuePoolFactoryInterface {
    return new Interface(_abi) as RevenuePoolFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RevenuePoolFactory {
    return new Contract(address, _abi, runner) as unknown as RevenuePoolFactory;
  }
}
