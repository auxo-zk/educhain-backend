/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRevenuePoolFactory,
  IRevenuePoolFactoryInterface,
} from "../../../contracts/interfaces/IRevenuePoolFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "createPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolIndex",
        type: "uint256",
      },
    ],
    name: "pool",
    outputs: [
      {
        internalType: "contract IRevenuePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IRevenuePoolFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IRevenuePoolFactoryInterface {
    return new Interface(_abi) as IRevenuePoolFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IRevenuePoolFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IRevenuePoolFactory;
  }
}
