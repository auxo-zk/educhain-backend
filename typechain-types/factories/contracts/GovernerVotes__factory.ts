/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  GovernerVotes,
  GovernerVotesInterface,
} from "../../contracts/GovernerVotes";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName_",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "minter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "GovernorAlreadyCastVote",
    type: "error",
  },
  {
    inputs: [],
    name: "GovernorInvalidVoteType",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IVotes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type GovernerVotesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernerVotesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernerVotes__factory extends ContractFactory {
  constructor(...args: GovernerVotesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    tokenName_: string,
    tokenSymbol_: string,
    minter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      tokenName_,
      tokenSymbol_,
      minter_,
      overrides || {}
    );
  }
  override deploy(
    tokenName_: string,
    tokenSymbol_: string,
    minter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      tokenName_,
      tokenSymbol_,
      minter_,
      overrides || {}
    ) as Promise<
      GovernerVotes & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GovernerVotes__factory {
    return super.connect(runner) as GovernerVotes__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernerVotesInterface {
    return new Interface(_abi) as GovernerVotesInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GovernerVotes {
    return new Contract(address, _abi, runner) as unknown as GovernerVotes;
  }
}
